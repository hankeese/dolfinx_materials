@DSL DefaultFiniteStrainDSL;
@Behaviour SaintVenantKirchhoffElasticity;
@Author Thomas Helfer;
@Date 19/10/2013;
@Description{
  "The Saint Venant - Kirchhoff hyper elastic behaviour"
}

@AuxiliaryStateVariable StressStensor S;
S.setEntryName("SecPiola");

@AuxiliaryStateVariable StressStensor Egl;
Egl.setEntryName("GreenL");

@MaterialProperty stress young;
young.setGlossaryName("YoungModulus");
@MaterialProperty real nu;
nu.setGlossaryName("PoissonRatio");

@LocalVariable stress lambda;   //<! First  Lamé coefficient
@LocalVariable stress mu;       //<! Second Lamé coefficient
@LocalVariable StrainStensor e; //<! Green-Lagrange strain

@InitLocalVariables{
  lambda = computeLambda(young,nu);
  mu     = computeMu(young,nu);
}

@PredictionOperator<DS_DEGL>{
  static_cast<void>(smt);
  Dt = lambda*Stensor4::IxI()+2*mu*Stensor4::Id();
}

@Integrator{
  Egl = computeGreenLagrangeTensor(F1);
  S = lambda*trace(Egl)*StrainStensor::Id()+2*mu*Egl;
  sig = convertSecondPiolaKirchhoffStressToCauchyStress(S,F1);
}

@TangentOperator<DS_DEGL>{
  static_cast<void>(smt);
  Dt = lambda*Stensor4::IxI()+2*mu*Stensor4::Id();
}

@InternalEnergy{
  const auto tr = trace(Egl);
  Psi_s = lambda*tr*tr/2+mu*(Egl|Egl);
}
